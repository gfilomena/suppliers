# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
# The following routes redirect to index.htmll in order to be managed by the Angular router
GET        /             controllers.Assets.at(path="/public/ui/dist", file="index.html")
GET        /home             controllers.Assets.at(path="/public/ui/dist", file="index.html")
GET        /search-history             controllers.Assets.at(path="/public/ui/dist", file="index.html")
GET        /bookmarks             controllers.Assets.at(path="/public/ui/dist", file="index.html")
GET        /profile             controllers.Assets.at(path="/public/ui/dist", file="index.html")
GET        /setting-rep             controllers.Assets.at(path="/public/ui/dist", file="index.html")
GET        /login             controllers.Assets.at(path="/public/ui/dist", file="index.html")
GET        /callback             controllers.Assets.at(path="/public/ui/dist", file="index.html")

# SEARCH
POST    /api/v1/search                      controllers.SearchController.search

# USER
POST   /api/v1/users/authenticate          controllers.UserController.authenticate
#GET   /api/v1/users/login                 controllers.UserController.login
#GET   /api/v1/callback                    controllers.UserController.callback(code: String, state: String)
POST   /api/v1/users/register              controllers.UserController.register
POST   /api/v1/users/logout                controllers.UserController.logout
GET    /api/v1/users                       controllers.UserController.getAll
GET    /api/v1/users/:id                   controllers.UserController.get(id: String)
PUT    /api/v1/users/:id                   controllers.UserController.update(id: String)
DELETE /api/v1/users/:username             controllers.UserController.delete(username: String)
GET    /api/v1/users/authorize             controllers.UserController.authorize

# REGISTRATION
GET    /api/v1/registrations                  controllers.RegistrationController.getAll()
GET    /api/v1/registrations/:id              controllers.RegistrationController.get(id: String)
POST   /api/v1/registrations                  controllers.RegistrationController.create()
GET    /api/v1/registrations/me/              controllers.RegistrationController.findByUser()
PUT    /api/v1/registrations/:id              controllers.RegistrationController.update(id: String)
DELETE /api/v1/registrations/:id              controllers.RegistrationController.delete(id: String)

# SEARCH RESULT
GET       /api/v1/users/:username/results       controllers.SearchController.getSearchResults(username: String)
DELETE    /api/v1/users/:username/results       controllers.SearchController.delete(username: String, ids: String)

# REPOSITORY
GET    /api/v1/repositories                  controllers.RepositoryController.getAll()
GET    /api/v1/repositories/:id              controllers.RepositoryController.get(id: String)
POST   /api/v1/repositories                  controllers.RepositoryController.create()
PUT    /api/v1/repositories/:id              controllers.RepositoryController.update(id: String)
DELETE /api/v1/repositories/:id              controllers.RepositoryController.delete(id: String)
GET    /api/v1/repositories/me/              controllers.RegistrationController.findRepositoriesByUser()

# BOOKMARK
GET       /api/v1/bookmarks                  controllers.BookmarkController.getAll()
GET       /api/v1/bookmarks/:id              controllers.BookmarkController.get(id: String)
GET       /api/v1/bookmarks/me/              controllers.BookmarkController.findByUser()
DELETE    /api/v1/bookmarks/me/              controllers.BookmarkController.deleteAllByUser()
POST      /api/v1/bookmarks                  controllers.BookmarkController.create()
# DELETE    /api/v1/bookmarks/:id              controllers.BookmarkController.delete(id: String)
DELETE    /api/v1/bookmarks                  controllers.BookmarkController.delete(ids: String)

# MCSSR
POST      /api/v1/mcssr                     controllers.McssrController.create()
POST      /api/v1/mcssr/tag                 controllers.McssrController.updateTags()

# SEMANTIC SEARCH
POST    /api/v1/annotations/url            controllers.SemanticController.urlAnnotations()
POST    /api/v1/annotations/file           controllers.SemanticController.fileAnnotations()

# Map static resources from the /public folder to the /assets URL path
# LEAVE THIS AT BOTTOM OF THIS FILE
GET        /*file               controllers.Assets.at(path="/public/ui/dist", file)
#GET        /*path               controllers.UserController.matchAll(path)
